// 2: ._strLit_For_0:
// 3: .data, "===for" <b> 0 
_strdata(3d-3d-3d-66,6f-72)_intdata(00)
// 6: ._strLit_14_1:
// 7: .data, "(1-4)" <b> 0 
_strdata(28-31-2d-34,29)_intdata(00)
// 10: ._strLit_0_2:
// 11: .data, "  0" <b> 0 
_strdata(20-20-30)_intdata(00)
// 14: ._strLit_1_3:
// 15: .data, "  1" <b> 0 
_strdata(20-20-31)_intdata(00)
// 18: ._strLit_2_4:
// 19: .data, "  2" <b> 0 
_strdata(20-20-32)_intdata(00)
// 22: ._strLit_3_5:
// 23: .data, "  3" <b> 0 
_strdata(20-20-33)_intdata(00)
// 26: ._strLit_4_6:
// 27: .data, "  4" <b> 0 
_strdata(20-20-34)_intdata(00)
// 30: .uats.loopTest.run:                 
// 31:                                     push, rbp                                
rex(48)op(ff)modR/M(f5)
// 32:                                     push, rbx                                
rex(48)op(ff)modR/M(f3)
// 33:                                     push, rsi                                
rex(48)op(ff)modR/M(f6)
// 34:                                     push, rdi                                
rex(48)op(ff)modR/M(f7)
// 35:                                     mov, rbp, rsp                            
rex(48)op(89)modR/M(e5)
// 36:                                     sub, rsp, 40                             
rex(48)op(83)modR/M(ec)i8(28)
// 37:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 38:                                     mov, rbx, rcx                            ; (preserve) [combiner]
rex(48)op(89)modR/M(cb)
// 39:                                     lea, rcx, qwordptr ._strLit_For_0        
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 40:                                     call, ._print                            ; (call label)
op(e8)co32(00-00-00-00)
// 41:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 42:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 43:                                     lea, rcx, qwordptr ._strLit_14_1         
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 44:                                     call, ._print                            ; (call label)
op(e8)co32(00-00-00-00)
// 45:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 46:                                     lea, rcx, [rbp-40]                       ; i
rex(48)op(8d)modR/M(4d)d8(d8)
// 47:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 48:                                     call, .sht.core.forLoopInst_sctor        ; (call label)
op(e8)co32(00-00-00-00)
// 49:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 50:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 51:                                     mov, rdx, 0                              ;       (0 req for rdx) [splitter]
rex(48)op(ba)i64(00-00-00-00,00-00-00-00)
// 52:                                     mov, r8, 1                               ;       (1 req for r8) [splitter]
rex(49)op(b8)i64(01-00-00-00,00-00-00-00)
// 53:                                     call, .sht.core.forLoopInst.setBounds    ; (call label)
op(e8)co32(00-00-00-00)
// 54:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 55:                                     goto, .uats.loopTest.run.loop_i_24_start ; label decomp
op(e9)co32(00-00-00-00)
// 57: .uats.loopTest.run.loop_i_24_start: 
// 58:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 59:                                     mov, rdi, rdx                            ; (preserve) [combiner]
rex(48)op(89)modR/M(d7)
// 60:                                     mov, rsi, r8                             ; (preserve) [combiner]
rex(4c)op(89)modR/M(c6)
// 61:                                     call, .sht.core.forLoopInst.inBounds     ; (call label)
op(e8)co32(00-00-00-00)
// 62:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 63:                                     cmp, rax, 0                              
rex(48)op(81)modR/M(f8)i32(00-00-00-00)
// 64:                                     je, .uats.loopTest.run.else.0            
op(0f-84)co32(00-00-00-00)
// 65:                                     goto, .uats.loopTest.run.endif.1         
op(e9)co32(00-00-00-00)
// 67: .uats.loopTest.run.else.0:          
// 68:                                     goto, .uats.loopTest.run.loop_i_24_end   
op(e9)co32(00-00-00-00)
// 69:                                     goto, .uats.loopTest.run.endif.1         
op(e9)co32(00-00-00-00)
// 71: .uats.loopTest.run.endif.1:         
// 72:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 73:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 74:                                     call, .sht.core.forLoopInst.getValue     ; (call label)
op(e8)co32(00-00-00-00)
// 75:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 76:                                     mov, rdx, rax                            ;       (rval5 req for rdx) [splitter]
rex(48)op(89)modR/M(c2)
// 77:                                     mov, rdi, rcx                            ; (preserve) [combiner]
rex(48)op(89)modR/M(cf)
// 78:                                     mov, rcx, rbx                            ; (restore [combiner])
rex(48)op(89)modR/M(d9)
// 79:                                     call, .uats.loopTest.printI              ; (call label)
op(e8)co32(00-00-00-00)
// 80:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 81:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 82:                                     mov, rcx, rdi                            ; (restore [combiner])
rex(48)op(89)modR/M(f9)
// 83:                                     call, [rcx]                              ; vtbl call to .sht.core.forLoopInst_vtbl::bump
rex(48)op(ff)modR/M(11)
// 84:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 85:                                     goto, .uats.loopTest.run.loop_i_24_start 
op(e9)co32(00-00-00-00)
// 87: .uats.loopTest.run.loop_i_24_end:   
// 88:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 89:                                     mov, rdx, 1                              ;       (1 req for rdx) [splitter]
rex(48)op(ba)i64(01-00-00-00,00-00-00-00)
// 90:                                     call, .sht.core.loopInstBase.setDir      ; (call label)
op(e8)co32(00-00-00-00)
// 91:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 92:                                     sub, rsp, 32                             
rex(48)op(83)modR/M(ec)i8(20)
// 93:                                     call, .sht.core.forLoopInst_sdtor        ; (call label)
op(e8)co32(00-00-00-00)
// 94:                                     add, rsp, 32                             
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 95:                                     mov, rsp, rbp                            
rex(48)op(89)modR/M(ec)
// 96:                                     pop, rdi                                 
rex(48)op(8f)modR/M(c7)
// 97:                                     pop, rsi                                 
rex(48)op(8f)modR/M(c6)
// 98:                                     pop, rbx                                 
rex(48)op(8f)modR/M(c3)
// 99:                                     pop, rbp                                 
rex(48)op(8f)modR/M(c5)
// 100:                                     ret                                      
op(c3)
// 103: .uats.loopTest.printI:         
// 104:                                push, rbp                           
rex(48)op(ff)modR/M(f5)
// 105:                                push, rbx                           
rex(48)op(ff)modR/M(f3)
// 106:                                push, rdi                           
rex(48)op(ff)modR/M(f7)
// 107:                                mov, rbp, rsp                       
rex(48)op(89)modR/M(e5)
// 108:                                xor, rbx, rbx                       
rex(48)op(31)modR/M(db)
// 109:                                cmp, rdx, 1                         
rex(48)op(81)modR/M(fa)i32(01-00-00-00)
// 110:                                setlts, rbx                         
rex(48)op(0f-9c)modR/M(c3)
// 111:                                cmp, rbx, 0                         
rex(48)op(81)modR/M(fb)i32(00-00-00-00)
// 112:                                je, .uats.loopTest.printI.else.0    
op(0f-84)co32(00-00-00-00)
// 113:                                sub, rsp, 32                        
rex(48)op(83)modR/M(ec)i8(20)
// 114:                                lea, rcx, qwordptr ._strLit_0_2     
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 115:                                mov, rbx, rdx                       ; (preserve) [combiner]
rex(48)op(89)modR/M(d3)
// 116:                                call, ._print                       ; (call label)
op(e8)co32(00-00-00-00)
// 117:                                add, rsp, 32                        
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 118:                                goto, .uats.loopTest.printI.endif.1 
op(e9)co32(00-00-00-00)
// 120: .uats.loopTest.printI.else.0:  
// 121:                                xor, rdi, rdi                       
rex(48)op(31)modR/M(ff)
// 122:                                cmp, rbx, 2                         
rex(48)op(81)modR/M(fb)i32(02-00-00-00)
// 123:                                setlts, rdi                         
rex(48)op(0f-9c)modR/M(c7)
// 124:                                cmp, rdi, 0                         
rex(48)op(81)modR/M(ff)i32(00-00-00-00)
// 125:                                je, .uats.loopTest.printI.else.2    
op(0f-84)co32(00-00-00-00)
// 126:                                sub, rsp, 32                        
rex(48)op(83)modR/M(ec)i8(20)
// 127:                                lea, rcx, qwordptr ._strLit_1_3     
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 128:                                call, ._print                       ; (call label)
op(e8)co32(00-00-00-00)
// 129:                                add, rsp, 32                        
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 130:                                goto, .uats.loopTest.printI.endif.3 
op(e9)co32(00-00-00-00)
// 132: .uats.loopTest.printI.else.2:  
// 133:                                xor, rdi, rdi                       
rex(48)op(31)modR/M(ff)
// 134:                                cmp, rbx, 3                         
rex(48)op(81)modR/M(fb)i32(03-00-00-00)
// 135:                                setlts, rdi                         
rex(48)op(0f-9c)modR/M(c7)
// 136:                                cmp, rdi, 0                         
rex(48)op(81)modR/M(ff)i32(00-00-00-00)
// 137:                                je, .uats.loopTest.printI.else.4    
op(0f-84)co32(00-00-00-00)
// 138:                                sub, rsp, 32                        
rex(48)op(83)modR/M(ec)i8(20)
// 139:                                lea, rcx, qwordptr ._strLit_2_4     
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 140:                                call, ._print                       ; (call label)
op(e8)co32(00-00-00-00)
// 141:                                add, rsp, 32                        
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 142:                                goto, .uats.loopTest.printI.endif.5 
op(e9)co32(00-00-00-00)
// 144: .uats.loopTest.printI.else.4:  
// 145:                                xor, rdi, rdi                       
rex(48)op(31)modR/M(ff)
// 146:                                cmp, rbx, 4                         
rex(48)op(81)modR/M(fb)i32(04-00-00-00)
// 147:                                setlts, rdi                         
rex(48)op(0f-9c)modR/M(c7)
// 148:                                cmp, rdi, 0                         
rex(48)op(81)modR/M(ff)i32(00-00-00-00)
// 149:                                je, .uats.loopTest.printI.else.6    
op(0f-84)co32(00-00-00-00)
// 150:                                sub, rsp, 32                        
rex(48)op(83)modR/M(ec)i8(20)
// 151:                                lea, rcx, qwordptr ._strLit_3_5     
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 152:                                call, ._print                       ; (call label)
op(e8)co32(00-00-00-00)
// 153:                                add, rsp, 32                        
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 154:                                goto, .uats.loopTest.printI.endif.7 
op(e9)co32(00-00-00-00)
// 156: .uats.loopTest.printI.else.6:  
// 157:                                sub, rsp, 32                        
rex(48)op(83)modR/M(ec)i8(20)
// 158:                                lea, rcx, qwordptr ._strLit_4_6     
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 159:                                call, ._print                       ; (call label)
op(e8)co32(00-00-00-00)
// 160:                                add, rsp, 32                        
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 161:                                goto, .uats.loopTest.printI.endif.7 
op(e9)co32(00-00-00-00)
// 163: .uats.loopTest.printI.endif.7: 
// 164:                                goto, .uats.loopTest.printI.endif.5 
op(e9)co32(00-00-00-00)
// 166: .uats.loopTest.printI.endif.5: 
// 167:                                goto, .uats.loopTest.printI.endif.3 
op(e9)co32(00-00-00-00)
// 169: .uats.loopTest.printI.endif.3: 
// 170:                                goto, .uats.loopTest.printI.endif.1 
op(e9)co32(00-00-00-00)
// 172: .uats.loopTest.printI.endif.1: 
// 173:                                mov, rsp, rbp                       
rex(48)op(89)modR/M(ec)
// 174:                                pop, rdi                            
rex(48)op(8f)modR/M(c7)
// 175:                                pop, rbx                            
rex(48)op(8f)modR/M(c3)
// 176:                                pop, rbp                            
rex(48)op(8f)modR/M(c5)
// 177:                                ret                                 
op(c3)
// 180: .uats.loopTest.cctor: 
// 181:                       push, rbp
rex(48)op(ff)modR/M(f5)
// 182:                       mov, rbp, rsp
rex(48)op(89)modR/M(e5)
// 183:                       mov, rsp, rbp
rex(48)op(89)modR/M(ec)
// 184:                       pop, rbp
rex(48)op(8f)modR/M(c5)
// 185:                       ret
op(c3)
// 188: .uats.loopTest.cdtor: 
// 189:                       push, rbp
rex(48)op(ff)modR/M(f5)
// 190:                       mov, rbp, rsp
rex(48)op(89)modR/M(e5)
// 191:                       mov, rsp, rbp
rex(48)op(89)modR/M(ec)
// 192:                       pop, rbp
rex(48)op(8f)modR/M(c5)
// 193:                       ret
op(c3)
// 196: .uats.loopTest_vtbl_inst: 
// 197:                           goto, .uats.loopTest.run
op(e9)co32(00-00-00-00)
// 200: .uats.loopTest_sctor: 
// 201:                       push, rbp                                   
rex(48)op(ff)modR/M(f5)
// 202:                       push, rbx                                   
rex(48)op(ff)modR/M(f3)
// 203:                       mov, rbp, rsp                               
rex(48)op(89)modR/M(e5)
// 204:                       sub, rsp, 32                                
rex(48)op(83)modR/M(ec)i8(20)
// 205:                       call, .sht.cons.program_sctor               ; (call label)
op(e8)co32(00-00-00-00)
// 206:                       add, rsp, 32                                
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 207:                       lea, rbx, qwordptr .uats.loopTest_vtbl_inst 
rex(48)op(8d)modR/M(1d)disp32toLabel(00-00-00-00)
// 208:                       mov, [rcx], rbx                             ; =
rex(48)op(89)modR/M(19)
// 209:                       sub, rsp, 32                                
rex(48)op(83)modR/M(ec)i8(20)
// 210:                       call, .uats.loopTest.cctor                  ; (call label)
op(e8)co32(00-00-00-00)
// 211:                       add, rsp, 32                                
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 212:                       mov, rsp, rbp                               
rex(48)op(89)modR/M(ec)
// 213:                       pop, rbx                                    
rex(48)op(8f)modR/M(c3)
// 214:                       pop, rbp                                    
rex(48)op(8f)modR/M(c5)
// 215:                       ret                                         
op(c3)
// 218: .uats.loopTest_sdtor: 
// 219:                       push, rbp                                   
rex(48)op(ff)modR/M(f5)
// 220:                       push, rbx                                   
rex(48)op(ff)modR/M(f3)
// 221:                       mov, rbp, rsp                               
rex(48)op(89)modR/M(e5)
// 222:                       lea, rbx, qwordptr .uats.loopTest_vtbl_inst 
rex(48)op(8d)modR/M(1d)disp32toLabel(00-00-00-00)
// 223:                       mov, [rcx], rbx                             ; =
rex(48)op(89)modR/M(19)
// 224:                       sub, rsp, 32                                
rex(48)op(83)modR/M(ec)i8(20)
// 225:                       call, .uats.loopTest.cdtor                  ; (call label)
op(e8)co32(00-00-00-00)
// 226:                       add, rsp, 32                                
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 227:                       sub, rsp, 32                                
rex(48)op(83)modR/M(ec)i8(20)
// 228:                       call, .sht.cons.program_sdtor               ; (call label)
op(e8)co32(00-00-00-00)
// 229:                       add, rsp, 32                                
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 230:                       mov, rsp, rbp                               
rex(48)op(89)modR/M(ec)
// 231:                       pop, rbx                                    
rex(48)op(8f)modR/M(c3)
// 232:                       pop, rbp                                    
rex(48)op(8f)modR/M(c5)
// 233:                       ret                                         
op(c3)

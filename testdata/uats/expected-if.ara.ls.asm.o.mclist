// 2: ._strLit_If_0:
// 3: .data, "===if" <b> 0 
_strdata(3d-3d-3d-69,66)_intdata(00)
// 6: ._strLit_1_1:
// 7: .data, "1)" <b> 0 
_strdata(31-29)_intdata(00)
// 10: ._strLit_2_2:
// 11: .data, "2)" <b> 0 
_strdata(32-29)_intdata(00)
// 14: ._strLit_3_3:
// 15: .data, "3)" <b> 0 
_strdata(33-29)_intdata(00)
// 18: ._strLit_4_4:
// 19: .data, "4)" <b> 0 
_strdata(34-29)_intdata(00)
// 22: ._strLit__5:
// 23: .data, "---" <b> 0 
_strdata(2d-2d-2d)_intdata(00)
// 26: ._strLit_1_6:
// 27: .data, "1" <b> 0 
_strdata(31)_intdata(00)
// 30: ._strLit_2_7:
// 31: .data, "2" <b> 0 
_strdata(32)_intdata(00)
// 34: ._strLit_34_8:
// 35: .data, "3-4" <b> 0 
_strdata(33-2d-34)_intdata(00)
// 38: ._strLit_13_9:
// 39: .data, "1-3" <b> 0 
_strdata(31-2d-33)_intdata(00)
// 42: ._strLit_4_10:
// 43: .data, "4" <b> 0 
_strdata(34)_intdata(00)
// 46: .uats.ifTest.run: 
// 47:                   push, rbp                        
rex(48)op(ff)modR/M(f5)
// 48:                   push, rbx                        
rex(48)op(ff)modR/M(f3)
// 49:                   mov, rbp, rsp                    
rex(48)op(89)modR/M(e5)
// 50:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 51:                   mov, rbx, rcx                    ; (preserve) [combiner]
rex(48)op(89)modR/M(cb)
// 52:                   lea, rcx, qwordptr ._strLit_If_0 
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 53:                   call, ._print                    ; (call label)
op(e8)co32(00-00-00-00)
// 54:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 55:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 56:                   lea, rcx, qwordptr ._strLit_1_1  
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 57:                   call, ._print                    ; (call label)
op(e8)co32(00-00-00-00)
// 58:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 59:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 60:                   mov, rdx, 1                      ;       (1 req for rdx) [splitter]
rex(48)op(ba)i64(01-00-00-00,00-00-00-00)
// 61:                   mov, rcx, rbx                    ; (restore [combiner])
rex(48)op(89)modR/M(d9)
// 62:                   call, .uats.ifTest.doTest        ; (call label)
op(e8)co32(00-00-00-00)
// 63:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 64:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 65:                   mov, rbx, rcx                    ; (preserve) [combiner]
rex(48)op(89)modR/M(cb)
// 66:                   lea, rcx, qwordptr ._strLit_2_2  
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 67:                   call, ._print                    ; (call label)
op(e8)co32(00-00-00-00)
// 68:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 69:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 70:                   mov, rdx, 2                      ;       (2 req for rdx) [splitter]
rex(48)op(ba)i64(02-00-00-00,00-00-00-00)
// 71:                   mov, rcx, rbx                    ; (restore [combiner])
rex(48)op(89)modR/M(d9)
// 72:                   call, .uats.ifTest.doTest        ; (call label)
op(e8)co32(00-00-00-00)
// 73:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 74:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 75:                   mov, rbx, rcx                    ; (preserve) [combiner]
rex(48)op(89)modR/M(cb)
// 76:                   lea, rcx, qwordptr ._strLit_3_3  
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 77:                   call, ._print                    ; (call label)
op(e8)co32(00-00-00-00)
// 78:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 79:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 80:                   mov, rdx, 3                      ;       (3 req for rdx) [splitter]
rex(48)op(ba)i64(03-00-00-00,00-00-00-00)
// 81:                   mov, rcx, rbx                    ; (restore [combiner])
rex(48)op(89)modR/M(d9)
// 82:                   call, .uats.ifTest.doTest        ; (call label)
op(e8)co32(00-00-00-00)
// 83:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 84:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 85:                   mov, rbx, rcx                    ; (preserve) [combiner]
rex(48)op(89)modR/M(cb)
// 86:                   lea, rcx, qwordptr ._strLit_4_4  
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 87:                   call, ._print                    ; (call label)
op(e8)co32(00-00-00-00)
// 88:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 89:                   sub, rsp, 32                     
rex(48)op(83)modR/M(ec)i8(20)
// 90:                   mov, rdx, 4                      ;       (4 req for rdx) [splitter]
rex(48)op(ba)i64(04-00-00-00,00-00-00-00)
// 91:                   mov, rcx, rbx                    ; (restore [combiner])
rex(48)op(89)modR/M(d9)
// 92:                   call, .uats.ifTest.doTest        ; (call label)
op(e8)co32(00-00-00-00)
// 93:                   add, rsp, 32                     
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 94:                   mov, rsp, rbp                    
rex(48)op(89)modR/M(ec)
// 95:                   pop, rbx                         
rex(48)op(8f)modR/M(c3)
// 96:                   pop, rbp                         
rex(48)op(8f)modR/M(c5)
// 97:                   ret                              
op(c3)
// 100: .uats.ifTest.doTest:         
// 101:                              push, rbp                         
rex(48)op(ff)modR/M(f5)
// 102:                              push, rbx                         
rex(48)op(ff)modR/M(f3)
// 103:                              push, rdi                         
rex(48)op(ff)modR/M(f7)
// 104:                              mov, rbp, rsp                     
rex(48)op(89)modR/M(e5)
// 105:                              sub, rsp, 32                      
rex(48)op(83)modR/M(ec)i8(20)
// 106:                              lea, rcx, qwordptr ._strLit__5    
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 107:                              mov, rbx, rdx                     ; (preserve) [combiner]
rex(48)op(89)modR/M(d3)
// 108:                              call, ._print                     ; (call label)
op(e8)co32(00-00-00-00)
// 109:                              add, rsp, 32                      
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 110:                              xor, rdi, rdi                     
rex(48)op(31)modR/M(ff)
// 111:                              cmp, rbx, 2                       
rex(48)op(81)modR/M(fb)i32(02-00-00-00)
// 112:                              setlts, rdi                       
rex(48)op(0f-9c)modR/M(c7)
// 113:                              cmp, rdi, 0                       
rex(48)op(81)modR/M(ff)i32(00-00-00-00)
// 114:                              je, .uats.ifTest.doTest.else.0    
op(0f-84)co32(00-00-00-00)
// 115:                              sub, rsp, 32                      
rex(48)op(83)modR/M(ec)i8(20)
// 116:                              lea, rcx, qwordptr ._strLit_1_6   
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 117:                              call, ._print                     ; (call label)
op(e8)co32(00-00-00-00)
// 118:                              add, rsp, 32                      
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 119:                              goto, .uats.ifTest.doTest.endif.1 
op(e9)co32(00-00-00-00)
// 121: .uats.ifTest.doTest.else.0:  
// 122:                              xor, rdi, rdi                     
rex(48)op(31)modR/M(ff)
// 123:                              cmp, rbx, 3                       
rex(48)op(81)modR/M(fb)i32(03-00-00-00)
// 124:                              setlts, rdi                       
rex(48)op(0f-9c)modR/M(c7)
// 125:                              cmp, rdi, 0                       
rex(48)op(81)modR/M(ff)i32(00-00-00-00)
// 126:                              je, .uats.ifTest.doTest.else.2    
op(0f-84)co32(00-00-00-00)
// 127:                              sub, rsp, 32                      
rex(48)op(83)modR/M(ec)i8(20)
// 128:                              lea, rcx, qwordptr ._strLit_2_7   
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 129:                              call, ._print                     ; (call label)
op(e8)co32(00-00-00-00)
// 130:                              add, rsp, 32                      
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 131:                              goto, .uats.ifTest.doTest.endif.3 
op(e9)co32(00-00-00-00)
// 133: .uats.ifTest.doTest.else.2:  
// 134:                              sub, rsp, 32                      
rex(48)op(83)modR/M(ec)i8(20)
// 135:                              lea, rcx, qwordptr ._strLit_34_8  
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 136:                              call, ._print                     ; (call label)
op(e8)co32(00-00-00-00)
// 137:                              add, rsp, 32                      
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 138:                              goto, .uats.ifTest.doTest.endif.3 
op(e9)co32(00-00-00-00)
// 140: .uats.ifTest.doTest.endif.3: 
// 141:                              goto, .uats.ifTest.doTest.endif.1 
op(e9)co32(00-00-00-00)
// 143: .uats.ifTest.doTest.endif.1: 
// 144:                              xor, rdi, rdi                     
rex(48)op(31)modR/M(ff)
// 145:                              cmp, rbx, 4                       
rex(48)op(81)modR/M(fb)i32(04-00-00-00)
// 146:                              setlts, rdi                       
rex(48)op(0f-9c)modR/M(c7)
// 147:                              cmp, rdi, 0                       
rex(48)op(81)modR/M(ff)i32(00-00-00-00)
// 148:                              je, .uats.ifTest.doTest.else.4    
op(0f-84)co32(00-00-00-00)
// 149:                              sub, rsp, 32                      
rex(48)op(83)modR/M(ec)i8(20)
// 150:                              lea, rcx, qwordptr ._strLit_13_9  
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 151:                              call, ._print                     ; (call label)
op(e8)co32(00-00-00-00)
// 152:                              add, rsp, 32                      
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 153:                              goto, .uats.ifTest.doTest.endif.5 
op(e9)co32(00-00-00-00)
// 155: .uats.ifTest.doTest.else.4:  
// 156:                              sub, rsp, 32                      
rex(48)op(83)modR/M(ec)i8(20)
// 157:                              lea, rcx, qwordptr ._strLit_4_10  
rex(48)op(8d)modR/M(0d)disp32toLabel(00-00-00-00)
// 158:                              call, ._print                     ; (call label)
op(e8)co32(00-00-00-00)
// 159:                              add, rsp, 32                      
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 160:                              goto, .uats.ifTest.doTest.endif.5 
op(e9)co32(00-00-00-00)
// 162: .uats.ifTest.doTest.endif.5: 
// 163:                              mov, rsp, rbp                     
rex(48)op(89)modR/M(ec)
// 164:                              pop, rdi                          
rex(48)op(8f)modR/M(c7)
// 165:                              pop, rbx                          
rex(48)op(8f)modR/M(c3)
// 166:                              pop, rbp                          
rex(48)op(8f)modR/M(c5)
// 167:                              ret                               
op(c3)
// 170: .uats.ifTest.cctor: 
// 171:                     push, rbp
rex(48)op(ff)modR/M(f5)
// 172:                     mov, rbp, rsp
rex(48)op(89)modR/M(e5)
// 173:                     mov, rsp, rbp
rex(48)op(89)modR/M(ec)
// 174:                     pop, rbp
rex(48)op(8f)modR/M(c5)
// 175:                     ret
op(c3)
// 178: .uats.ifTest.cdtor: 
// 179:                     push, rbp
rex(48)op(ff)modR/M(f5)
// 180:                     mov, rbp, rsp
rex(48)op(89)modR/M(e5)
// 181:                     mov, rsp, rbp
rex(48)op(89)modR/M(ec)
// 182:                     pop, rbp
rex(48)op(8f)modR/M(c5)
// 183:                     ret
op(c3)
// 186: .uats.ifTest_vtbl_inst: 
// 187:                         goto, .uats.ifTest.run
op(e9)co32(00-00-00-00)
// 190: .uats.ifTest_sctor: 
// 191:                     push, rbp                                 
rex(48)op(ff)modR/M(f5)
// 192:                     push, rbx                                 
rex(48)op(ff)modR/M(f3)
// 193:                     mov, rbp, rsp                             
rex(48)op(89)modR/M(e5)
// 194:                     sub, rsp, 32                              
rex(48)op(83)modR/M(ec)i8(20)
// 195:                     call, .sht.cons.program_sctor             ; (call label)
op(e8)co32(00-00-00-00)
// 196:                     add, rsp, 32                              
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 197:                     lea, rbx, qwordptr .uats.ifTest_vtbl_inst 
rex(48)op(8d)modR/M(1d)disp32toLabel(00-00-00-00)
// 198:                     mov, [rcx], rbx                           ; =
rex(48)op(89)modR/M(19)
// 199:                     sub, rsp, 32                              
rex(48)op(83)modR/M(ec)i8(20)
// 200:                     call, .uats.ifTest.cctor                  ; (call label)
op(e8)co32(00-00-00-00)
// 201:                     add, rsp, 32                              
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 202:                     mov, rsp, rbp                             
rex(48)op(89)modR/M(ec)
// 203:                     pop, rbx                                  
rex(48)op(8f)modR/M(c3)
// 204:                     pop, rbp                                  
rex(48)op(8f)modR/M(c5)
// 205:                     ret                                       
op(c3)
// 208: .uats.ifTest_sdtor: 
// 209:                     push, rbp                                 
rex(48)op(ff)modR/M(f5)
// 210:                     push, rbx                                 
rex(48)op(ff)modR/M(f3)
// 211:                     mov, rbp, rsp                             
rex(48)op(89)modR/M(e5)
// 212:                     lea, rbx, qwordptr .uats.ifTest_vtbl_inst 
rex(48)op(8d)modR/M(1d)disp32toLabel(00-00-00-00)
// 213:                     mov, [rcx], rbx                           ; =
rex(48)op(89)modR/M(19)
// 214:                     sub, rsp, 32                              
rex(48)op(83)modR/M(ec)i8(20)
// 215:                     call, .uats.ifTest.cdtor                  ; (call label)
op(e8)co32(00-00-00-00)
// 216:                     add, rsp, 32                              
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 217:                     sub, rsp, 32                              
rex(48)op(83)modR/M(ec)i8(20)
// 218:                     call, .sht.cons.program_sdtor             ; (call label)
op(e8)co32(00-00-00-00)
// 219:                     add, rsp, 32                              
rex(48)op(81)modR/M(c4)i32(20-00-00-00)
// 220:                     mov, rsp, rbp                             
rex(48)op(89)modR/M(ec)
// 221:                     pop, rbx                                  
rex(48)op(8f)modR/M(c3)
// 222:                     pop, rbp                                  
rex(48)op(8f)modR/M(c5)
// 223:                     ret                                       
op(c3)

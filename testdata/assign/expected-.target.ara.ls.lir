=== LIR bundle has 6 objects(s) ===   (hint: $=var, ~=temp, @=immediate)

----- start stream .assign.consoleTarget.main
0 <enterFunc>    ~rval/0, $args/0                                 ;;; .entrypoint
0 <reserveLocal> $cout/8                                          ;;; cout
0 <precall>      
0 call           ~rval0/0, @.sht.cons.stdout_sctor/0, $cout/0     ;;; (call label)
0 <reserveLocal> $obj0/16                                         ;;; obj0
0 <precall>      
0 call           ~rval1/0, @.assign.assignTester_sctor/0, $obj0/0 ;;; (call label)
0 mov            [~obj0+8]/0, $cout/0                             ;;; =
0 <precall>      
0 mov            ~run/0, [~obj0]/0                                ;;; fieldaccess: owner of run
0 call           ~rval2/0, [~run]/0, $obj0/0, $args/0             ;;; (call ptr)
0 <precall>      
0 call           ~rval3/0, @.assign.assignTester_sdtor/0, $obj0/0 ;;; (call label)
0 <precall>      
0 call           ~rval4/0, @.sht.cons.stdout_sdtor/0, $cout/0     ;;; (call label)

----- start stream .assign.consoleTarget.cctor
0 <enterFunc> ~rval5/0, $self/0 ;;; .assign.consoleTarget.cctor

----- start stream .assign.consoleTarget.cdtor
0 <enterFunc> ~rval6/0, $self0/0 ;;; .assign.consoleTarget.cdtor

----- start stream .assign.consoleTarget_vtbl_inst
0 <globalConstData> @/0 ;;; .assign.consoleTarget_vtbl_inst

----- start stream .assign.consoleTarget_sctor
0 <enterFunc> ~rval7/0, $self1/0                                ;;; .assign.consoleTarget_sctor
0 <precall>   
0 call        ~rval8/0, @.sht.core.object_sctor/0, $self/0      ;;; (call label)
0 mov         [~self]/0, @.assign.consoleTarget_vtbl_inst/0     ;;; =
0 <precall>   
0 call        ~rval9/0, @.assign.consoleTarget.cctor/0, $self/0 ;;; (call label)

----- start stream .assign.consoleTarget_sdtor
0 <enterFunc> ~rval10/0, $self2/0                                ;;; .assign.consoleTarget_sdtor
0 mov         [~self]/0, @.assign.consoleTarget_vtbl_inst/0      ;;; =
0 <precall>   
0 call        ~rval11/0, @.assign.consoleTarget.cdtor/0, $self/0 ;;; (call label)
0 <precall>   
0 call        ~rval12/0, @.sht.core.object_sdtor/0, $self/0      ;;; (call label)

=== end of LIR bundle dump ===

~~~ some debugging hints for this target ~~~

pref order              rbx rdi rsi r12 r13 r14 r15 rax rcx rdx r8 r9 r10 r11
passing order           -   -   -   -   -   -   -   0   1   2   3  4  -   -
saved in Prolog or Call P   P   P   P   P   P   P   C   C   C   C  C  C   C
as int                  24  30  29  35  36  37  38  23  25  26  31 32 33  34

reg rax rbx rcx rdx rbp rsp rsi rdi r8 r9 r10 r11 r12 r13 r14 r15
    23  24  25  26  27  28  29  30  31 32 33  34  35  36  37  38

cc shadow space = 32

=== LIR bundle has 21 objects(s) ===   (hint: $=var, ~=temp, @=immediate, !=label)

----- start stream .assign.assignTester.run
10 <selectSegment> @code/0                   
20 <enterFunc>     ~rval/0, $self/0, $args/0 ;;; .assign.assignTester.run
30 <exitFunc>      

----- start stream .assign.assignTester.readFromSubObject
10 <selectSegment> @code/0                        
20 <enterFunc>     ~rval0/0, $self0/0, $a/0, $v/0 ;;; .assign.assignTester.readFromSubObject
30 mov             $v/0, [~a+16]/0                ;;; =
40 <exitFunc>      

----- start stream .assign.assignTester.writeIntoSubObject
10  <selectSegment>  @code/0                                                                                                  
20  <enterFunc>      ~rval1/0, $self1/0                                                                                       ;;; .assign.assignTester.writeIntoSubObject
30  <reserveLocal>   $a_alloc/24                                                                                              ;;; a
40  lea              $a/24, $a_alloc/24                                                                                       ;;; a
50  <precall>        @totalStackSize/32                                                                                       
60  call             ~rval2/0, !.assign.A_sctor/0, $a/0, ~rdx_burn/0, ~r8_burn/0, ~r9_burn/0, ~r10_trash/0, ~r11_trash/0      ;;; (call label)
70  <postcall>       @totalStackSize/32                                                                                       
80  mov              [~a+16]/0, @7/1                                                                                          ;;; =
90  <precall>        @totalStackSize/32                                                                                       
100 call             ~rval3/0, !.assign.A_sdtor/0, $a/0, ~rdx_burn0/0, ~r8_burn0/0, ~r9_burn0/0, ~r10_trash0/0, ~r11_trash0/0 ;;; (call label)
110 <postcall>       @totalStackSize/32                                                                                       
120 <unreserveLocal> $a_alloc/24                                                                                              
130 <exitFunc>       

----- start stream .assign.assignTester.readFromSubSubObject
10 <selectSegment> @code/0                             
20 <enterFunc>     ~rval4/0, $self2/0, $a0/0, $wrong/0 ;;; .assign.assignTester.readFromSubSubObject
30 mov             ~_x/0, [~a+16]/0                    ;;; fieldaccess: owner of _x
40 mov             $wrong/0, [~_x+16]/0                ;;; =
50 <exitFunc>      

----- start stream .assign.assignTester.writeIntoSubSubObject
10  <selectSegment>  @code/0                                                                                                      
20  <enterFunc>      ~rval5/0, $self3/0                                                                                           ;;; .assign.assignTester.writeIntoSubSubObject
30  <reserveLocal>   $wrong_alloc/24                                                                                              ;;; wrong
40  lea              $wrong/24, $wrong_alloc/24                                                                                   ;;; wrong
50  <precall>        @totalStackSize/32                                                                                           
60  call             ~rval6/0, !.assign.A_sctor/0, $wrong/0, ~rdx_burn1/0, ~r8_burn1/0, ~r9_burn1/0, ~r10_trash1/0, ~r11_trash1/0 ;;; (call label)
70  <postcall>       @totalStackSize/32                                                                                           
80  mov              ~_x0/0, [~wrong+16]/0                                                                                        ;;; fieldaccess: owner of _x
90  mov              [~_x0+16]/0, @7/1                                                                                            ;;; =
100 <precall>        @totalStackSize/32                                                                                           
110 call             ~rval7/0, !.assign.A_sdtor/0, $wrong/0, ~rdx_burn2/0, ~r8_burn2/0, ~r9_burn2/0, ~r10_trash2/0, ~r11_trash2/0 ;;; (call label)
120 <postcall>       @totalStackSize/32                                                                                           
130 <unreserveLocal> $wrong_alloc/24                                                                                              
140 <exitFunc>       

----- start stream .assign.assignTester.bopAssociativity
10  <selectSegment>  @code/0            
20  <enterFunc>      ~rval8/0, $self4/0 ;;; .assign.assignTester.bopAssociativity
30  <reserveLocal>   $v/8               ;;; v
40  mov              ~agg/1, @1/1       
50  add              ~agg/1, @2/1       
60  mov              ~agg0/1, ~agg/1    
70  add              ~agg0/1, @3/1      
80  mov              $v/0, ~agg0/1      ;;; =
90  <unreserveLocal> $v/8               
100 <exitFunc>       

----- start stream .assign.assignTester.cctor
10 <selectSegment> @code/0            
20 <enterFunc>     ~rval9/0, $self5/0 ;;; .assign.assignTester.cctor
30 <exitFunc>      

----- start stream .assign.assignTester.cdtor
10 <selectSegment> @code/0             
20 <enterFunc>     ~rval10/0, $self6/0 ;;; .assign.assignTester.cdtor
30 <exitFunc>      

----- start stream .assign.A.cctor
10 <selectSegment> @code/0             
20 <enterFunc>     ~rval11/0, $self7/0 ;;; .assign.A.cctor
30 mov             [~self+8]/0, @0/1   ;;; =
40 <exitFunc>      

----- start stream .assign.A.cdtor
10 <selectSegment> @code/0             
20 <enterFunc>     ~rval12/0, $self8/0 ;;; .assign.A.cdtor
30 <exitFunc>      

----- start stream .assign.B.cctor
10 <selectSegment> @code/0             
20 <enterFunc>     ~rval13/0, $self9/0 ;;; .assign.B.cctor
30 mov             [~self+8]/0, @0/1   ;;; =
40 mov             [~self+16]/0, @0/1  ;;; =
50 <exitFunc>      

----- start stream .assign.B.cdtor
10 <selectSegment> @code/0              
20 <enterFunc>     ~rval14/0, $self10/0 ;;; .assign.B.cdtor
30 <exitFunc>      

----- start stream .assign.A_vtbl_inst
10 <selectSegment>   @const/0 
20 <globalConstData> @/0      ;;; .assign.A_vtbl_inst

----- start stream .assign.B_vtbl_inst
10 <selectSegment>   @const/0 
20 <globalConstData> @/0      ;;; .assign.B_vtbl_inst

----- start stream .assign.assignTester_vtbl_inst
10 <selectSegment>   @const/0                     
20 <globalConstData> @.assign.assignTester.run /0 ;;; .assign.assignTester_vtbl_inst

----- start stream .assign.A_sctor
10  <selectSegment> @code/0                                                                                                             
20  <enterFunc>     ~rval15/0, $self11/0                                                                                                ;;; .assign.A_sctor
30  <precall>       @totalStackSize/32                                                                                                  
40  call            ~rval16/0, !.sht.core.object_sctor/0, $self/0, ~rdx_burn3/0, ~r8_burn3/0, ~r9_burn3/0, ~r10_trash3/0, ~r11_trash3/0 ;;; (call label)
50  <postcall>      @totalStackSize/32                                                                                                  
60  mov             [~self]/0, !.assign.A_vtbl_inst/0                                                                                   ;;; =
70  <precall>       @totalStackSize/32                                                                                                  
80  call            ~rval17/0, !.assign.A.cctor/0, $self/0, ~rdx_burn4/0, ~r8_burn4/0, ~r9_burn4/0, ~r10_trash4/0, ~r11_trash4/0        ;;; (call label)
90  <postcall>      @totalStackSize/32                                                                                                  
100 <exitFunc>      

----- start stream .assign.A_sdtor
10  <selectSegment> @code/0                                                                                                             
20  <enterFunc>     ~rval18/0, $self12/0                                                                                                ;;; .assign.A_sdtor
30  mov             [~self]/0, !.assign.A_vtbl_inst/0                                                                                   ;;; =
40  <precall>       @totalStackSize/32                                                                                                  
50  call            ~rval19/0, !.assign.A.cdtor/0, $self/0, ~rdx_burn5/0, ~r8_burn5/0, ~r9_burn5/0, ~r10_trash5/0, ~r11_trash5/0        ;;; (call label)
60  <postcall>      @totalStackSize/32                                                                                                  
70  <precall>       @totalStackSize/32                                                                                                  
80  call            ~rval20/0, !.sht.core.object_sdtor/0, $self/0, ~rdx_burn6/0, ~r8_burn6/0, ~r9_burn6/0, ~r10_trash6/0, ~r11_trash6/0 ;;; (call label)
90  <postcall>      @totalStackSize/32                                                                                                  
100 <exitFunc>      

----- start stream .assign.B_sctor
10  <selectSegment> @code/0                                                                                                             
20  <enterFunc>     ~rval21/0, $self13/0                                                                                                ;;; .assign.B_sctor
30  <precall>       @totalStackSize/32                                                                                                  
40  call            ~rval22/0, !.sht.core.object_sctor/0, $self/0, ~rdx_burn7/0, ~r8_burn7/0, ~r9_burn7/0, ~r10_trash7/0, ~r11_trash7/0 ;;; (call label)
50  <postcall>      @totalStackSize/32                                                                                                  
60  mov             [~self]/0, !.assign.B_vtbl_inst/0                                                                                   ;;; =
70  <precall>       @totalStackSize/32                                                                                                  
80  call            ~rval23/0, !.assign.B.cctor/0, $self/0, ~rdx_burn8/0, ~r8_burn8/0, ~r9_burn8/0, ~r10_trash8/0, ~r11_trash8/0        ;;; (call label)
90  <postcall>      @totalStackSize/32                                                                                                  
100 <exitFunc>      

----- start stream .assign.B_sdtor
10  <selectSegment> @code/0                                                                                                                  
20  <enterFunc>     ~rval24/0, $self14/0                                                                                                     ;;; .assign.B_sdtor
30  mov             [~self]/0, !.assign.B_vtbl_inst/0                                                                                        ;;; =
40  <precall>       @totalStackSize/32                                                                                                       
50  call            ~rval25/0, !.assign.B.cdtor/0, $self/0, ~rdx_burn9/0, ~r8_burn9/0, ~r9_burn9/0, ~r10_trash9/0, ~r11_trash9/0             ;;; (call label)
60  <postcall>      @totalStackSize/32                                                                                                       
70  <precall>       @totalStackSize/32                                                                                                       
80  call            ~rval26/0, !.sht.core.object_sdtor/0, $self/0, ~rdx_burn10/0, ~r8_burn10/0, ~r9_burn10/0, ~r10_trash10/0, ~r11_trash10/0 ;;; (call label)
90  <postcall>      @totalStackSize/32                                                                                                       
100 <exitFunc>      

----- start stream .assign.assignTester_sctor
10  <selectSegment> @code/0                                                                                                                      
20  <enterFunc>     ~rval27/0, $self15/0                                                                                                         ;;; .assign.assignTester_sctor
30  <precall>       @totalStackSize/32                                                                                                           
40  call            ~rval28/0, !.sht.cons.program_sctor/0, $self/0, ~rdx_burn11/0, ~r8_burn11/0, ~r9_burn11/0, ~r10_trash11/0, ~r11_trash11/0    ;;; (call label)
50  <postcall>      @totalStackSize/32                                                                                                           
60  mov             [~self]/0, !.assign.assignTester_vtbl_inst/0                                                                                 ;;; =
70  <precall>       @totalStackSize/32                                                                                                           
80  call            ~rval29/0, !.assign.assignTester.cctor/0, $self/0, ~rdx_burn12/0, ~r8_burn12/0, ~r9_burn12/0, ~r10_trash12/0, ~r11_trash12/0 ;;; (call label)
90  <postcall>      @totalStackSize/32                                                                                                           
100 <exitFunc>      

----- start stream .assign.assignTester_sdtor
10  <selectSegment> @code/0                                                                                                                      
20  <enterFunc>     ~rval30/0, $self16/0                                                                                                         ;;; .assign.assignTester_sdtor
30  mov             [~self]/0, !.assign.assignTester_vtbl_inst/0                                                                                 ;;; =
40  <precall>       @totalStackSize/32                                                                                                           
50  call            ~rval31/0, !.assign.assignTester.cdtor/0, $self/0, ~rdx_burn13/0, ~r8_burn13/0, ~r9_burn13/0, ~r10_trash13/0, ~r11_trash13/0 ;;; (call label)
60  <postcall>      @totalStackSize/32                                                                                                           
70  <precall>       @totalStackSize/32                                                                                                           
80  call            ~rval32/0, !.sht.cons.program_sdtor/0, $self/0, ~rdx_burn14/0, ~r8_burn14/0, ~r9_burn14/0, ~r10_trash14/0, ~r11_trash14/0    ;;; (call label)
90  <postcall>      @totalStackSize/32                                                                                                           
100 <exitFunc>      

=== end of LIR bundle dump ===

~~~ some debugging hints for this target ~~~

pref order              rbx rdi rsi r12 r13 r14 r15 rax rcx rdx r8 r9 r10 r11
passing order           -   -   -   -   -   -   -   0   1   2   3  4  -   -
saved in Prolog or Call P   P   P   P   P   P   P   C   C   C   C  C  C   C
as int                  24  30  29  35  36  37  38  23  25  26  31 32 33  34

reg rax rbx rcx rdx rbp rsp rsi rdi r8 r9 r10 r11 r12 r13 r14 r15
    23  24  25  26  27  28  29  30  31 32 33  34  35  36  37  38

cc shadow space = 32

=== LIR bundle has 5 objects(s) ===   (hint: $=var, ~=temp, @=immediate)

----- start stream .assign.assignTester.run
10 <selectSegment> @code/0                   
20 <enterFunc>     ~rval/0, $self/0, $args/0 ;;; .assign.assignTester.run
30 <exitFunc>      

----- start stream .assign.assignTester.readFromSubObject
10 <selectSegment> @code/0                        
20 <enterFunc>     ~rval0/0, $self0/0, $a/0, $v/0 ;;; .assign.assignTester.readFromSubObject
30 mov             $v/0, [~a+8]/0                 ;;; =
40 <exitFunc>      

----- start stream .assign.assignTester.writeIntoSubObject
10 <selectSegment> @code/0            
20 <enterFunc>     ~rval1/0, $self1/0 ;;; .assign.assignTester.writeIntoSubObject
30 <reserveLocal>  $a0/16             ;;; a
40 mov             [~a+8]/0, @7/0     ;;; =
50 <unreserveLocal>$a0/16             
60 <exitFunc>      

----- start stream .assign.assignTester.readFromSubSubObject
10 <selectSegment> @code/0                             
20 <enterFunc>     ~rval2/0, $self2/0, $a1/0, $wrong/0 ;;; .assign.assignTester.readFromSubSubObject
30 mov             ~x/0, [~a+8]/0                      ;;; fieldaccess: owner of x
40 mov             $wrong/0, [~x+8]/0                  ;;; =
50 <exitFunc>      

----- start stream .assign.assignTester.writeIntoSubSubObject
10 <selectSegment> @code/0            
20 <enterFunc>     ~rval3/0, $self3/0 ;;; .assign.assignTester.writeIntoSubSubObject
30 <reserveLocal>  $wrong0/16         ;;; wrong
40 mov             ~x0/0, [~wrong+8]/0;;; fieldaccess: owner of x
50 mov             [~x0+8]/0, @7/0    ;;; =
60 <unreserveLocal>$wrong0/16         
70 <exitFunc>      

=== end of LIR bundle dump ===

~~~ some debugging hints for this target ~~~

pref order              rbx rdi rsi r12 r13 r14 r15 rax rcx rdx r8 r9 r10 r11
passing order           -   -   -   -   -   -   -   0   1   2   3  4  -   -
saved in Prolog or Call P   P   P   P   P   P   P   C   C   C   C  C  C   C
as int                  24  30  29  35  36  37  38  23  25  26  31 32 33  34

reg rax rbx rcx rdx rbp rsp rsi rdi r8 r9 r10 r11 r12 r13 r14 r15
    23  24  25  26  27  28  29  30  31 32 33  34  35  36  37  38

cc shadow space = 32

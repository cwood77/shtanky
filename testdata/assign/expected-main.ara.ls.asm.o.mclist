// 2: .assign.assignTester.run: 
// 3:                           ret
op(c3)
// 6: .assign.assignTester.readFromSubObject: 
// 7:                                         mov, r8, [rdx+8] ; =
rex(4c)op(8b)modR/M(42)d8(08)
// 8:                                         ret              
op(c3)
// 11: .assign.assignTester.writeIntoSubObject: 
// 12:                                          push, rbx       
rex(48)op(ff)modR/M(f3)
// 13:                                          sub, rsp, 16    
rex(48)op(83)modR/M(ec)i8(10)
// 14:                                          sub, rsp, 16    
rex(48)op(83)modR/M(ec)i8(10)
// 15:                                          mov, [rbx+8], 7 ; =
rex(48)op(c7)d8(43)i32(07-00-00-00)
// 16:                                          add, rsp, 16    
rex(48)op(83)modR/M(c4)i8(10)
// 17:                                          add, rsp, 16    
rex(48)op(83)modR/M(c4)i8(10)
// 18:                                          pop, rbx        
rex(48)op(8f)modR/M(c3)
// 19:                                          ret             
op(c3)
// 22: .assign.assignTester.readFromSubSubObject: 
// 23:                                            push, rbx         
rex(48)op(ff)modR/M(f3)
// 24:                                            push, rdi         
rex(48)op(ff)modR/M(f7)
// 25:                                            mov, rbx, [rdi+8] ; fieldaccess: owner of x
rex(48)op(8b)modR/M(5f)d8(08)
// 26:                                            mov, r8, [rbx+8]  ; =
rex(4c)op(8b)modR/M(43)d8(08)
// 27:                                            pop, rdi          
rex(48)op(8f)modR/M(c7)
// 28:                                            pop, rbx          
rex(48)op(8f)modR/M(c3)
// 29:                                            ret               
op(c3)
// 32: .assign.assignTester.writeIntoSubSubObject: 
// 33:                                             push, rbx         
rex(48)op(ff)modR/M(f3)
// 34:                                             push, rdi         
rex(48)op(ff)modR/M(f7)
// 35:                                             sub, rsp, 16      
rex(48)op(83)modR/M(ec)i8(10)
// 36:                                             sub, rsp, 16      
rex(48)op(83)modR/M(ec)i8(10)
// 37:                                             mov, rbx, [rdi+8] ; fieldaccess: owner of x
rex(48)op(8b)modR/M(5f)d8(08)
// 38:                                             mov, [rbx+8], 7   ; =
rex(48)op(c7)d8(43)i32(07-00-00-00)
// 39:                                             add, rsp, 16      
rex(48)op(83)modR/M(c4)i8(10)
// 40:                                             add, rsp, 16      
rex(48)op(83)modR/M(c4)i8(10)
// 41:                                             pop, rdi          
rex(48)op(8f)modR/M(c7)
// 42:                                             pop, rbx          
rex(48)op(8f)modR/M(c3)
// 43:                                             ret               
op(c3)

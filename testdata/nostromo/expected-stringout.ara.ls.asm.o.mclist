// 2: .nostromo.gDbgOut:
// 3: .data, 
// 6: .nostromo.debugOut.write: 
// 7:                           push, rbx         
rex(48)op(ff)modR/M(f3)
// 8:                           push, rdi         
rex(48)op(ff)modR/M(f7)
// 9:                           sub, rsp, 32      
rex(48)op(83)modR/M(ec)i8(20)
// 10:                           mov, rbx, [rcx+8] ; fieldaccess: owner of _vtbl
rex(48)op(8b)modR/M(59)d8(08)
// 11:                           mov, rdi, [rbx]   ; fieldaccess: owner of write8
rex(48)op(8b)modR/M(3b)
// 12:                           mov, rdx, 0       ; shape:hoist imm from call
rex(48)op(ba)i64(00-00-00-00,00-00-00-00)
// 13:                           mov, rbx, rcx     ; (preserve) [combiner]
rex(48)op(89)modR/M(cb)
// 14:                           mov, rcx, [rbx+8] ; shape:hoist addrOf from call
rex(48)op(8b)modR/M(4b)d8(08)
// 15:                           call, [rdi]       ; (call ptr)
rex(48)op(ff)modR/M(17)
// 16:                           add, rsp, 32      
rex(48)op(83)modR/M(c4)i8(20)
// 17:                           pop, rdi          
rex(48)op(8f)modR/M(c7)
// 18:                           pop, rbx          
rex(48)op(8f)modR/M(c3)
// 19:                           ret               
op(c3)
// 22: .nostromo.debugOut.cctor: 
// 23:                           ret
op(c3)
// 26: .nostromo.debugOut.cdtor: 
// 27:                           ret
op(c3)
// 30: .nostromo.debugOut_vtbl_inst:
// 31: .data, 
// 34: .nostromo.debugOut_sctor: 
// 35:                           sub, rsp, 32                           
rex(48)op(83)modR/M(ec)i8(20)
// 36:                           call, .sht.core.object_sctor           ; (call label)
op(ff)modR/M(15)co32(00-00-00-00)
// 37:                           add, rsp, 32                           
rex(48)op(83)modR/M(c4)i8(20)
// 38:                           mov, r10, .nostromo.debugOut_vtbl_inst ; codeshape decomp
rex(4c)op(8b)modR/M(15)co32(00-00-00-00)
// 39:                           mov, [rcx], r10                        ; =
rex(4c)op(89)modR/M(11)
// 40:                           sub, rsp, 32                           
rex(48)op(83)modR/M(ec)i8(20)
// 41:                           call, .nostromo.debugOut.cctor         ; (call label)
op(ff)modR/M(15)co32(00-00-00-00)
// 42:                           add, rsp, 32                           
rex(48)op(83)modR/M(c4)i8(20)
// 43:                           ret                                    
op(c3)
// 46: .nostromo.debugOut_sdtor: 
// 47:                           mov, r10, .nostromo.debugOut_vtbl_inst ; codeshape decomp
rex(4c)op(8b)modR/M(15)co32(00-00-00-00)
// 48:                           mov, [rcx], r10                        ; =
rex(4c)op(89)modR/M(11)
// 49:                           sub, rsp, 32                           
rex(48)op(83)modR/M(ec)i8(20)
// 50:                           call, .nostromo.debugOut.cdtor         ; (call label)
op(ff)modR/M(15)co32(00-00-00-00)
// 51:                           add, rsp, 32                           
rex(48)op(83)modR/M(c4)i8(20)
// 52:                           sub, rsp, 32                           
rex(48)op(83)modR/M(ec)i8(20)
// 53:                           call, .sht.core.object_sdtor           ; (call label)
op(ff)modR/M(15)co32(00-00-00-00)
// 54:                           add, rsp, 32                           
rex(48)op(83)modR/M(c4)i8(20)
// 55:                           ret                                    
op(c3)

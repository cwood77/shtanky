// 1: .test.test.run: 
// 2:                 push, rbx          
rex(48)op(ff)modR/M(38)
// 3:                 push, rdi          
rex(48)op(ff)modR/M(38)
// 4:                 sub, rsp, 32       
rex(48)op(83)modR/M(ec)i8(20)
// 5:                 mov, rbx, [rcx]    ;    :_out
op(de)op(ad)
// 6:                 mov, rdi, [rbx]    ;    :type
op(de)op(ad)
// 7:                 mov, rbx, rcx      ;       (preserve) [combiner]
op(de)op(ad)
// 8:                 mov, rcx, [rdi]    ;    :printLn
op(de)op(ad)
// 9:                 mov, rdx, [rbx]    ;    :_out
op(de)op(ad)
// 10:                 call, rcx, rdx, r8 
op(e8)
// 11:                 add, rsp, 32       
rex(48)op(83)modR/M(c4)i8(20)
// 12:                 pop, rdi           
rex(48)op(8f)modR/M(38)
// 13:                 pop, rbx           
rex(48)op(8f)modR/M(18)

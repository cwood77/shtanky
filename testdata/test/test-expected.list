2://                 push, rbx          
2:rex(48)2:op(ff)2:modR/M(18)
3://                 push, rdi          
3:rex(48)3:op(ff)3:modR/M(38)
4://                 sub, rsp, 32       
4:rex(48)4:op(83)4:modR/M(c4)4:i8(00)
5://                 mov, rbx, [rcx]    ;    :_out
5:op(de)5:op(ad)
6://                 mov, rdi, [rbx]    ;    :type
6:op(de)6:op(ad)
7://                 mov, rbx, rcx      ;       (preserve) [combiner]
7:op(de)7:op(ad)
8://                 mov, rcx, [rdi]    ;    :printLn
8:op(de)8:op(ad)
9://                 mov, rdx, [rbx]    ;    :_out
9:op(de)9:op(ad)
10://                 call, rcx, rdx, r8 
10:op(de)10:op(ad)
11://                 add, rsp, 32       
11:rex(48)11:op(de)11:op(ad)11:modR/M(c4)
12://                 pop, rdi           
12:op(de)12:op(ad)
13://                 pop, rbx           
13:op(de)13:op(ad)

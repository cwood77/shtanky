=== LIR bundle has 4 objects(s) ===   (hint: $=var, ~=temp, @=immediate, !=label)

----- start stream .zero
10 <selectSegment>   @const/0      
20 <globalConstData> @"0" <b> 0 /0 ;;; .zero

----- start stream .one
10 <selectSegment>   @const/0      
20 <globalConstData> @"1" <b> 0 /0 ;;; .one

----- start stream .other
10 <selectSegment>   @const/0           
20 <globalConstData> @"other!" <b> 0 /0 ;;; .other

----- start stream .entrypoint
10  <selectSegment>  @code/0                                                                                             
20  <enterFunc>      ~rval/0                                                                                             ;;; .entrypoint
30  <reserveLocal>   $f/8                                                                                                ;;; f
40  <precall>        @totalStackSize/32                                                                                  
50  mov              ~t/1, @8/1                                                                                          ;;; shape:hoist imm from call
60  call             ~rval0/0, !._getflg/0, ~t/1, ~rdx_burn/0, ~r8_burn/0, ~r9_burn/0, ~r10_trash/0, ~r11_trash/0        ;;; (call label)
70  <postcall>       @totalStackSize/32                                                                                  
80  mov              $f/0, ~rval0/0                                                                                      ;;; =
90  xor              ~lt/0, ~lt/0                                                                                        
100 cmp              $f/0, @1/1                                                                                          
110 setlts           ~lt/0                                                                                               
120 cmp              ~lt/0, @0/1                                                                                         
130 je               !.entrypoint.else.0/0                                                                               
140 <precall>        @totalStackSize/32                                                                                  
150 lea              ~str/0, !.zero/0                                                                                    
160 call             ~rval1/0, !._print/0, ~str/0, ~rdx_burn0/0, ~r8_burn0/0, ~r9_burn0/0, ~r10_trash0/0, ~r11_trash0/0  ;;; (call label)
170 <postcall>       @totalStackSize/32                                                                                  
180 goto             !.entrypoint.endif.1/0                                                                              
190 <selectSegment>  @code/0                                                                                             
200 <label>          !.entrypoint.else.0/0                                                                               
210 xor              ~lt0/0, ~lt0/0                                                                                      
220 cmp              $f/0, @2/1                                                                                          
230 setlts           ~lt0/0                                                                                              
240 cmp              ~lt0/0, @0/1                                                                                        
250 je               !.entrypoint.else.2/0                                                                               
260 <precall>        @totalStackSize/32                                                                                  
270 lea              ~str0/0, !.one/0                                                                                    
280 call             ~rval2/0, !._print/0, ~str0/0, ~rdx_burn1/0, ~r8_burn1/0, ~r9_burn1/0, ~r10_trash1/0, ~r11_trash1/0 ;;; (call label)
290 <postcall>       @totalStackSize/32                                                                                  
300 goto             !.entrypoint.endif.3/0                                                                              
310 <selectSegment>  @code/0                                                                                             
320 <label>          !.entrypoint.else.2/0                                                                               
330 <precall>        @totalStackSize/32                                                                                  
340 lea              ~str1/0, !.other/0                                                                                  
350 call             ~rval3/0, !._print/0, ~str1/0, ~rdx_burn2/0, ~r8_burn2/0, ~r9_burn2/0, ~r10_trash2/0, ~r11_trash2/0 ;;; (call label)
360 <postcall>       @totalStackSize/32                                                                                  
370 goto             !.entrypoint.endif.3/0                                                                              
380 <selectSegment>  @code/0                                                                                             
390 <label>          !.entrypoint.endif.3/0                                                                              
400 goto             !.entrypoint.endif.1/0                                                                              
410 <selectSegment>  @code/0                                                                                             
420 <label>          !.entrypoint.endif.1/0                                                                              
430 <unreserveLocal> $f/8                                                                                                
440 <exitFunc>       

=== end of LIR bundle dump ===

~~~ some debugging hints for this target ~~~

pref order              rbx rdi rsi r12 r13 r14 r15 rax rcx rdx r8 r9 r10 r11
passing order           -   -   -   -   -   -   -   0   1   2   3  4  -   -
saved in Prolog or Call P   P   P   P   P   P   P   C   C   C   C  C  C   C
as int                  24  30  29  35  36  37  38  23  25  26  31 32 33  34

reg rax rbx rcx rdx rbp rsp rsi rdi r8 r9 r10 r11 r12 r13 r14 r15
    23  24  25  26  27  28  29  30  31 32 33  34  35  36  37  38

cc shadow space = 32
